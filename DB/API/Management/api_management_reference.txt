-------------------------------------------------------------------------------
3.5 Management (IMPULSE configuration and data)
-------------------------------------------------------------------------------

3.5.1 Overview

    IMPULSE has site configuration directives that can make certain 
    configuration settings easier to manage. There are also validation 
    functions to make sure funky characters don't make it into the database 
    where they should not be. 

    Logging is also a feature in this application, and should be used for all 
    major events. Errors are also a useful thing to record to see what is 
    going on.

3.5.2 Functions

3.5.2.1 Create Log Entry

    Record an entry in the master log

    Definition:
        api.create_log_entry(source text, severity text, message text)

    Arguments:
        source - Where the message is coming from
        severity - Severity for viewing purposes
        message - The message to log

    Returns:
        void

    Rules:
        None

    Example:
        SELECT api.create_log_entry('CLI','DEBUG','Doing something');

3.5.2.2 Create Site Configuration Directive

    Enter a new site configuration directive in the table

    Definition:
        api.create_site_configuration(directive text, value text)

    Arguments:
        directive - Directive to create
        value - Value to assign to the new directive

    Returns:
        void

    Rules:
        No duplicate directives (primary key)

    Example:
        SELECT api.create_site_configuration('EXAMPLE_OPTION','something');

3.5.2.3 Remove Site Configuration Directive

    Remove an existing site configuration directive

    Definition: 
        api.remove_site_configuration(directive text)

    Arguments:
        directive - Directive to remove

    Returns:
        void

    Rules:
        None

    Example:
        SELECT api.remove_site_configuration('EXAMPLE_OPTION');

3.5.2.4 Modify Site Configuration Directive

    Modify an existing site configuration directive

    Definition:
        api.modify_site_configuration(input_directive text, input_value text)

    Arguments:
        input_directive - Directive to modify
        input_value - New value to set

    Returns:
        void

    Rules:
        None

    Example:
        SELECT api.modify_site_configuration('DNS_DEFAULT_ZONE','example.com');

3.5.2.5 Get Current User

    Get the current authenticated user (who the application thinks you are)

    Definition:
        api.get_current_user()

    Arguments:
        None

    Returns:
        text

    Rules:
        None

    Example:
        SELECT api.get_current_user();

3.5.2.6 Get Current User Level

    Return the current privilege level of the user

    Definition:
        api.get_current_user_level()

    Arguments:
        None

    Returns:
        text

    Rules:
        None

    Example:
        SELECT api.get_current_user_level();        

3.5.2.7 Get LDAP User Level    

    Query the configured LDAP server to determine the access rights of the 
    current user. They can either be an ADMIN, a USER, or a PROGRAM. 
    Note: The word PROGRAM was chosen rather than SERVICE because a message 
    can be printed "Greetings Program!". I love Tron. 

    Definition:
        api.get_ldap_user_level(text)

    Arguments:
        $1 - The username to query for

    Returns:
        text

    Rules:
        LDAP server must be in site configuration

    None:
        SELECT api.get_ldap_user_level('johndoe');        

3.5.2.8 Get Site Configuration Directive

    Get the value of a configured site directive

    Definition:
        api.get_site_configuration(input_directive text)

    Arguments:
        input_directive - Directive to get the value of

    Returns
        text

    Rules:
        None

    Example:
        SELECT api.get_site_configuration('DNS_DEFAULT_ZONE');        

3.5.2.9 Validate Nospecial

    Validation with no special characters allowed. A-Z, 0-9 only.

    Definition:
        api.validate_nospecial(input text)

    Arguments:
        input - String to parse

    Returns:
        text

    Rules:
        None

    Example:
        SELECT api.sanitize_general('This string has &*@!&$*#&');

3.5.2.10 Validate Name

    Validation with characters allowed for resource names. 

    Definition:
        api.validate_name(input text)

    Arguments:
        input - String to parse

    Returns:
        text

    Rules:
        None

    Example:
        SELECT api.validate_name('This string has &*@!&$*#&');

3.5.2.11 Renew System

    Systems must be renewed every year or they and all their records expire 
    and are removed. 

    Definition:
        api.renew_system(system_name text)

    Arguments:
        system_name - Name of the system to renew

    Returns:
        void

    Rules:
        None

    Example:
        SELECT api.renew_system('server1');

3.5.2.12 Lock Process

    Lock a process for an output job run

    Definition:
        api.lock_process(input_process text)

    Arguments:
        input_process - The name of the process

    Returns:
        void

    Rules:
        None

    Example:
        SELECT api.lock_process('NSUPDATE');

3.5.2.13 Unlock Process

    Unlock a job process

    Definition:
        api.unlock_process(input_process text)

    Arguments:
        input_process - The name of the process

    Returns:
        void

    Rules:
        None

    Example:
        SELECT api.unlock_process('NSUPDATE');

3.5.2.14 Initialize

    Load all user privileges and set username in the database permissioning 
    system. This function must be called at the start of every database 
    connection. 

    Definition:
        api.initialize(input_username text)

    Arguments:
        input_username - The user who is logging in

    Rules:
        None

    Example:
        SELECT api.initialize('john.doe');

3.5.2.15 Deinitialize

    Erase the current users session privileges. Useful for scripting

    Defintion:
        api.deinitialize()

    Arguments:
        none

    Returns:
        void

    Rules:
        api.initialize() must have already been called in the session

    Example:
        SELECT api.deinitialize();