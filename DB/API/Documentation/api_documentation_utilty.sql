/* API - regenerate_documentation */CREATE OR REPLACE FUNCTION "api"."regenerate_documentation"() RETURNS VOID AS $$	BEGIN		-- Insert new functions		INSERT INTO "documentation"."functions" ("specific_name","returns","name","definition") (		SELECT "specific_name","data_type","routine_name",api.get_function_definition("specific_name")		FROM "information_schema"."routines"		WHERE "specific_schema" = 'api' AND "specific_name" NOT IN (SELECT "specific_name" FROM "documentation"."functions"));				-- Delete old functions		DELETE FROM "documentation"."functions" WHERE "specific_name" NOT IN (SELECT "specific_name" FROM "information_schema"."routines");		-- Insert new arguments		INSERT INTO "documentation"."arguments" ("specific_name","argument","type","position") (		SELECT "specific_name","parameter_name","udt_name","ordinal_position"		FROM "information_schema"."parameters"		WHERE "specific_schema" = 'api' AND "parameter_name" IS NOT NULL AND ("specific_name","parameter_name") NOT IN (SELECT "specific_name","parameter_name" FROM "documentation"."arguments"));				INSERT INTO "documentation"."arguments" ("specific_name","argument","type","position") (		SELECT "specific_name",'$'||"ordinal_position","udt_name","ordinal_position"		FROM "information_schema"."parameters"		WHERE "specific_schema" = 'api' AND "parameter_name" IS NULL AND ("specific_name","ordinal_position") NOT IN (SELECT "specific_name","ordinal_position" FROM "documentation"."arguments"));				-- Delete old arguments		DELETE FROM "documentation"."arguments" WHERE ("specific_name","argument") NOT IN (SELECT "specific_name","parameter_name" FROM "information_schema"."parameters");		DELETE FROM "documentation"."arguments" WHERE "specific_name" NOT IN (SELECT "specific_name" FROM "information_schema"."parameters");	END;$$ LANGUAGE 'plpgsql';COMMENT ON FUNCTION "api"."regenerate_documentation"() IS 'Regenerate the API documentation directly from the existing functions';